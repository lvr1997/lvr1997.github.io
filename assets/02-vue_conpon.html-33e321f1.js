import{_ as n,p as s,q as a,Y as e}from"./framework-aa5c4115.js";const t={},o=e(`<blockquote><p>父子组件的生命周期是一个嵌套的过程包括渲染和更新两部分</p></blockquote><h2 id="父子组件的生命周期" tabindex="-1"><a class="header-anchor" href="#父子组件的生命周期" aria-hidden="true">#</a> 父子组件的生命周期</h2><ol><li>渲染的过程：</li></ol><ul><li>父 <code>beforeCreate</code>-&gt; 父<code>created</code> -&gt; 父<code>beforeMount</code> -&gt; 子<code>beforeCreate</code> -&gt; 子<code>created</code> -&gt; 子<code>beforeMount</code> -&gt; 子<code>mounted</code></li></ul><ol start="2"><li>组件更新过程：</li></ol><ul><li>父<code>beforeUpdate</code> -&gt; 子<code>beforeUpdate</code> -&gt; 子<code>updated</code> -&gt; 父<code>updated</code><br>- 父组件更新过程：<br> - 父<code>beforeUpdate</code> -&gt; 父<code>updated</code></li></ul><ol start="3"><li>销毁过程</li></ol><ul><li>父<code>beforeDestory</code> -&gt; 子<code>beforeDestory</code> -&gt; 子<code>destoryed</code> -&gt; 父<code>destoryed</code></li></ul><h2 id="组件的自定义事件" tabindex="-1"><a class="header-anchor" href="#组件的自定义事件" aria-hidden="true">#</a> 组件的自定义事件</h2><h3 id="全局事件总线" tabindex="-1"><a class="header-anchor" href="#全局事件总线" aria-hidden="true">#</a> 全局事件总线</h3><p><strong>Vue2中</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//在App.vue中</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment">//安装全局事件总线，$box就是当前应用的vm</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//在A组件：A组件想要接收数据，则在A组件中给$bus绑定自定义事件，事件的回调留在A组件自身</span>
<span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token function">demo</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提供数据：<code>this.$bus.$emit(&quot;xxx&quot;, &#39;数据&#39;)</code><a name="eFnV5"></a></p><p><strong>Vue3中</strong></p><ol><li><p>安装mitt插件</p></li><li><p>在需要用到全局事件总线的组件中引入emitter</p></li></ol>`,16),c=[o];function p(i,l){return s(),a("div",null,c)}const u=n(t,[["render",p],["__file","02-vue_conpon.html.vue"]]);export{u as default};
